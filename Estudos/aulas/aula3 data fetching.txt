App.js

import './App.css';
import { Component } from 'react';

class App extends Component {
  state = {
    counter:0,
    posts: [ ]
    };

    componentDidMount() {
      this.loadPosts()
    }

    loadPosts = async () => {
      const postsReponse = fetch('https://jsonplaceholder.typicode.com/posts')
      const photosReponse = fetch('https://jsonplaceholder.typicode.com/photos')

      const [posts, photos] = await Promise.all([postsReponse, photosReponse])

      const postsJson = await posts.json()
      const photosJson = await photos.json()

      const postsAndPhotos = postsJson.map((post, index) => {
        return{ ...post, cover: photosJson[index].url }
      })

      this.setState({ posts: postsAndPhotos })
    }

  render() {
    const { posts } = this.state;
    return(
      <section className='container'>
        <div className="posts">
        {posts.map(post => (
          <div className='post'>
            <img src={post.cover} alt= {post.title} />
           <div key={post.id} className="post-content">
            <h1>{post.title}</h1>
            <p>{post.body}</p>
          </div>
          </div>
      ))}
        </div>
      </section>
    );
  }
}

export default App;

SEPARAÇÃO

App.css

.container{
  max-width: 1200px;
  margin: 0 auto;
  min-height: 100vh;
  background: #eee;
  padding: 30px;
}

.posts{
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 30px;
  transition: transform 100ms ease-in-out;
}

.post:hover{
  transform: scale(1.05);
}

.post{
  background-color: #fff;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

.post img{
  max-width: 100%;
}

.post-content{
  padding: 30px;

}